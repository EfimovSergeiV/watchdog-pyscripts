import pyaudio
import wave
import numpy as np
import cv2
from datetime import datetime
import time
import os

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
THRESHOLD = 600
CHUNK = 1024
FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 16000
SILENCE_TIMEOUT = 3  # —Å–µ–∫—É–Ω–¥ —Ç–∏—à–∏–Ω—ã –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏

# --- –ü–∞–ø–∫–∏ ---
os.makedirs("photos", exist_ok=True)
os.makedirs("recordings", exist_ok=True)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ ---
p = pyaudio.PyAudio()
stream = p.open(format=FORMAT,
                channels=CHANNELS,
                rate=RATE,
                input=True,
                frames_per_buffer=CHUNK)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–º–µ—Ä—ã ---
camera = cv2.VideoCapture(0)
if not camera.isOpened():
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—É")
    exit()

print("üéôÔ∏è –û–∂–∏–¥–∞–Ω–∏–µ –≥—Ä–æ–º–∫–æ–≥–æ –∑–≤—É–∫–∞...")

recording = False
frames = []
silence_timer = None
session_id = None  # –¥–ª—è –≥—Ä—É–ø–ø—ã —Ñ–∞–π–ª–æ–≤

def take_photo(tag=""):
    timestamp = datetime.now().strftime("%d-%m-%Y_%H-%M-%S_%f")
    filename = f"photos/photo_{tag}_{timestamp}.jpg"
    ret, frame = camera.read()
    if ret:
        cv2.imwrite(filename, frame)
        print(f"üì∑ –°–Ω–∏–º–æ–∫ —Å–¥–µ–ª–∞–Ω: {filename}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—ä—ë–º–∫–µ")

try:
    while True:
        data = stream.read(CHUNK, exception_on_overflow=False)
        audio_data = np.frombuffer(data, dtype=np.int16)
        volume = np.linalg.norm(audio_data)

        if volume > THRESHOLD:
            if not recording:
                session_id = datetime.now().strftime("%d-%m-%Y_%H-%M-%S")
                print("üî¥ –ì—Ä–æ–º–∫–∏–π –∑–≤—É–∫! –ó–∞–ø–∏—Å—å –Ω–∞—á–∞–ª–∞—Å—å.")
                recording = True
                frames = []

            # –î–µ–ª–∞—Ç—å —Å–Ω–∏–º–æ–∫ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≥—Ä–æ–º–∫–æ–º —Å–æ–±—ã—Ç–∏–∏
            take_photo(tag=session_id)

            frames.append(data)
            silence_timer = time.time()

        elif recording:
            frames.append(data)
            if time.time() - silence_timer > SILENCE_TIMEOUT:
                print("‚èπÔ∏è –¢–∏—à–∏–Ω–∞. –ó–∞–≤–µ—Ä—à–∞—é –∑–∞–ø–∏—Å—å.")
                filename = f"recordings/recording_{session_id}.wav"
                wf = wave.open(filename, 'wb')
                wf.setnchannels(CHANNELS)
                wf.setsampwidth(p.get_sample_size(FORMAT))
                wf.setframerate(RATE)
                wf.writeframes(b''.join(frames))
                wf.close()
                print(f"üíæ –ê—É–¥–∏–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}")
                recording = False
        else:
            pass

except KeyboardInterrupt:
    print("\nüö™ –í—ã—Ö–æ–¥ –ø–æ Ctrl+C")

finally:
    stream.stop_stream()
    stream.close()
    p.terminate()
    camera.release()
