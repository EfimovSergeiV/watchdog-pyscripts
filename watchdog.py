""" –°—Ç–æ—Ä–æ–∂–µ–≤–∞—è —Å–æ–±–∞–∫–∞ –∫–æ—Ç–æ—Ä–æ—è —Ä–∞–∑–±—É–¥–∏—Ç –î–∂–µ–∫–∞ """
import websocket, json, time
from utils.wake_on_lan import send_wol
from utils.mattermost import send_notification

from conf import WS_URL, BOT_TOKEN, USER_ACCESS, MAC_ADDRESS, BROADCAST_IP



def on_message(ws, message):
    print("üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:")

    data = json.loads(message)

    if data.get("event") == "posted":
        post_raw = data["data"]["post"]
        post_data = json.loads(post_raw)

        message_text = post_data.get("message")
        sender_name = data["data"].get("sender_name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")

        print(f"üí¨ {sender_name}: {message_text}")

        WORDS = ["–≤–∫–ª", "–≤–∫–ª—é—á–∏", "—Ä–∞–∑–±—É–¥–∏","–≤–∫–ª—é—á–∏—Ç—å", "–∑–∞–ø—É—Å–∫", "wake", "—Å—Ç–∞—Ä—Ç"]
        command = message_text.lower().strip()
        
        if sender_name in USER_ACCESS:
            if command in WORDS:
                print("üîî –†–∞–∑–±—É–¥–∏–º –î–∂–µ–∫–∞!")
                send_notification("–ü—Ä–æ–±—É—é —Ä–∞–∑–±—É–¥–∏—Ç—å –º–∏–Ω–∏–∫–æ–º–ø—å—é—Ç–µ—Ä...")
                send_wol(MAC_ADDRESS, BROADCAST_IP)

    else:
        print("üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ post):")
        print(json.dumps(data, indent=2, ensure_ascii=False))


def on_error(ws, error):
    print("‚ùå –û—à–∏–±–∫–∞:", error)


def on_close(ws, close_status_code, close_msg):
    print(f"üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ: {close_status_code} {close_msg}")


def on_open(ws):
    print("üîì WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω, –∂–¥—ë–º 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ç–æ–∫–µ–Ω–∞...")
    time.sleep(1)
    payload = {
        "seq": 1,
        "action": "authentication_challenge",
        "data": {
            "token": BOT_TOKEN
        }
    }
    print("‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    ws.send(json.dumps(payload))



if __name__ == "__main__":
    websocket.enableTrace(False)
    ws = websocket.WebSocketApp(
        WS_URL,
        on_open=on_open,
        on_message=on_message,
        on_error=on_error,
        on_close=on_close
    )
    ws.run_forever()