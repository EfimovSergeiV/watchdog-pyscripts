import pyaudio
import wave
import numpy as np
from datetime import datetime
from collections import deque
import time

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
THRESHOLD = 400  # –ü–æ—Ä–æ–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ (—á–µ–º –Ω–∏–∂–µ ‚Äî —Ç–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–µ–µ)
CHUNK = 1024     # –†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞ –∞—É–¥–∏–æ
FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 16000     # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏
SILENCE_TIMEOUT = 2  # –°–µ–∫—É–Ω–¥—ã —Ç–∏—à–∏–Ω—ã –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
p = pyaudio.PyAudio()

stream = p.open(format=FORMAT,
                channels=CHANNELS,
                rate=RATE,
                input=True,
                frames_per_buffer=CHUNK)

print("üéôÔ∏è –û–∂–∏–¥–∞–Ω–∏–µ –≥—Ä–æ–º–∫–æ–≥–æ –∑–≤—É–∫–∞...")

recording = False
frames = []
silence_timer = None

try:
    while True:
        data = stream.read(CHUNK, exception_on_overflow=False)
        audio_data = np.frombuffer(data, dtype=np.int16)
        volume = np.linalg.norm(audio_data)

        if volume > THRESHOLD:
            if not recording:
                print("üî¥ –ó–≤—É–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –Ω–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å...")
                recording = True
                frames = []

            frames.append(data)
            silence_timer = time.time()
        elif recording:
            frames.append(data)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫–ª–æ –ª–∏ –≤—Ä–µ–º—è —Ç–∏—à–∏–Ω—ã
            if time.time() - silence_timer > SILENCE_TIMEOUT:
                print("‚èπÔ∏è –¢–∏—Ö–æ. –ó–∞–≤–µ—Ä—à–∞—é –∑–∞–ø–∏—Å—å.")
                filename = datetime.now().strftime("recording_%Y%m%d_%H%M%S.wav")
                wf = wave.open(f"recordings/{filename}", 'wb') # –ü–æ–¥ –≤–∏–Ω–¥–æ–π —Ç—É—Ç –±—É–¥–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø—É—Ç—ë–º
                wf.setnchannels(CHANNELS)
                wf.setsampwidth(p.get_sample_size(FORMAT))
                wf.setframerate(RATE)
                wf.writeframes(b''.join(frames))
                wf.close()
                print(f"üíæ –ó–∞–ø–∏—Å–∞–Ω–æ –≤ —Ñ–∞–π–ª: {filename}")
                recording = False
        else:
            pass  # –¢–∏—Ö–æ, –∂–¥–µ–º

except KeyboardInterrupt:
    print("\nüö™ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ Ctrl+C")

finally:
    stream.stop_stream()
    stream.close()
    p.terminate()
